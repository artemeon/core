<?php
/*"******************************************************************************************************
*   (c) 2004-2006 by MulchProductions, www.mulchprod.de                                                 *
*   (c) 2007-2016 by Kajona, www.kajona.de                                                              *
*       Published under the GNU LGPL v2.1, see /system/licence_lgpl.txt                                 *
********************************************************************************************************/

namespace Kajona\System\System\Filters;

use Kajona\System\System\FilterBase;
use Kajona\System\System\OrmComparatorEnum;
use Kajona\System\System\OrmCondition;
use Kajona\System\System\StringUtil;

/**
 * Filter for a user group
 *
 * @author stefan.meyer1@yahoo.de
 *
 * @module user
 * @moduleId _user_modul_id_
 */
class UserGroupFilter extends FilterBase
{
    /**
     * @var string
     * @tableColumn group_name
     * @filterCompareOperator LIKE
     * @fieldLabel group_name
     * @fieldType Kajona\System\Admin\Formentries\FormentryText
     */
    private $strName = null;

    /**
     * @var int
     * @tableColumn group_system_group
     * @filterCompareOperator EQ
     * @fieldType Kajona\System\Admin\Formentries\FormentryYesno
     */
    private $intSystemFilter = null;

    /**
     * array of group system ids
     *
     * @var string
     * @tableColumn system_id
     * @filterCompareOperator NOTIN
     */
    private $arrExcludedGroups = null;

    protected function getSingleOrmCondition($strAttributeName, $strValue, $strTableColumn, OrmComparatorEnum $enumFilterCompareOperator = null)
    {
        if ($strAttributeName == "intSystemFilter") {
            if ($strValue == "1") {
                return new OrmCondition("group_system_group != 1 OR group_system_group IS NULL", []);
            }

            return null;
        }
        return parent::getSingleOrmCondition($strAttributeName, $strValue, $strTableColumn, $enumFilterCompareOperator); // TODO: Change the autogenerated stub
    }

    public function configureDefaultValues()
    {
        $this->intSystemFilter = 1;
        parent::configureDefaultValues(); // TODO: Change the autogenerated stub
    }


    /**
     * @return string
     */
    public function getStrName()
    {
        return $this->strName;
    }

    /**
     * @param string $strName
     */
    public function setStrName($strName)
    {
        $this->strName = $strName;
    }

    /**
     * @return array
     */
    public function getArrExcludedGroups()
    {
        return StringUtil::toArray($this->arrExcludedGroups);
    }

    /**
     * @param array $arrExcludedGroups
     */
    public function setArrExcludedGroups($arrExcludedGroups)
    {
        $this->arrExcludedGroups = $arrExcludedGroups;
    }

    /**
     * @return int
     */
    public function getIntSystemFilter(): int
    {
        return $this->intSystemFilter;
    }

    /**
     * @param int $intSystemFilter
     */
    public function setIntSystemFilter(int $intSystemFilter)
    {
        $this->intSystemFilter = $intSystemFilter;
    }




}